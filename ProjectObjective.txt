To learn Backend Development with Django by
	# building a Blog Application
		# # Create a Author Model
		# # Create a Post Model
		# # Create a Comment Model
		# # Perform CRUD operations on Author, Post, Comment using APIs

'''

	Author:Post		1:M relationship
	Post:Comment	1:M relationship
	Author:Comment  1:M relationship6

	Author:
		name
		email

	Post:
		author (who posted)
		title
		content
		created_at

	Comment:
		post (under which post)
		author (who commented)
		content
		created_at

'''


CREATE: POST /authors/, /posts/, /comments/
READ: GET /authors/, /posts/, /comments/
UPDATE: PUT/PATCH /authors/{id}/, /posts/{id}/, /comments/{id}/
DELETE: DELETE /authors/{id}/, /posts/{id}/, /comments/{id}/


CRUD Mapping:
Operation		View to Use						HTTP Method
Create			CreateAPIView					POST
Retrieve		RetrieveUpdateDestroyAPIView	GET
Update			RetrieveUpdateDestroyAPIView	PATCH/PUT
Delete			RetrieveUpdateDestroyAPIView	DELETE




Celery + RabbitMQ: Everytime an author posts a comment in a post, we simulate email notification sending to demonstrate async processing of tasks


Example Views:


Username: celery
Password: rabbitmqpass